MOVQ(
  (encoder): Encoder(
    (conv_in): Conv2d(3, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (down): ModuleList(
      (0): Module(
        (block): ModuleList(
          (0-1): 2 x ResnetBlock(
            (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 256, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
        (downsample): Downsample(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
      )
      (1): Module(
        (block): ModuleList(
          (0): ResnetBlock(
            (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
            (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nin_shortcut): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock(
            (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
            (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
        (downsample): Downsample(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
      )
      (2): Module(
        (block): ModuleList(
          (0-1): 2 x ResnetBlock(
            (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
            (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
        (downsample): Downsample(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
      )
      (3): Module(
        (block): ModuleList(
          (0): ResnetBlock(
            (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
            (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 1024, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nin_shortcut): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock(
            (norm1): GroupNorm(32, 1024, eps=1e-06, affine=True)
            (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 1024, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList(
          (0-1): 2 x AttnBlock(
            (norm): GroupNorm(32, 1024, eps=1e-06, affine=True)
            (q): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (k): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (v): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (proj_out): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (mid): Module(
      (block_1): ResnetBlock(
        (norm1): GroupNorm(32, 1024, eps=1e-06, affine=True)
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (norm2): GroupNorm(32, 1024, eps=1e-06, affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (attn_1): AttnBlock(
        (norm): GroupNorm(32, 1024, eps=1e-06, affine=True)
        (q): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (k): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (v): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (proj_out): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
      )
      (block_2): ResnetBlock(
        (norm1): GroupNorm(32, 1024, eps=1e-06, affine=True)
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (norm2): GroupNorm(32, 1024, eps=1e-06, affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (norm_out): GroupNorm(32, 1024, eps=1e-06, affine=True)
    (conv_out): Conv2d(1024, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (decoder): MOVQDecoder(
    (conv_in): Conv2d(4, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (mid): Module(
      (block_1): ResnetBlock(
        (norm1): SpatialNorm(
          (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
          (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
          (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (norm2): SpatialNorm(
          (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
          (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
          (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (attn_1): AttnBlock(
        (norm): SpatialNorm(
          (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
          (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
          (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
        )
        (q): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (k): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (v): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (proj_out): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
      )
      (block_2): ResnetBlock(
        (norm1): SpatialNorm(
          (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
          (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
          (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
        )
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (norm2): SpatialNorm(
          (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
          (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
          (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (up): ModuleList(
      (0): Module(
        (block): ModuleList(
          (0): ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nin_shortcut): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (1-2): 2 x ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
      )
      (1): Module(
        (block): ModuleList(
          (0-2): 3 x ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
        (upsample): Upsample(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (2): Module(
        (block): ModuleList(
          (0): ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nin_shortcut): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (1-2): 2 x ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList()
        (upsample): Upsample(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (3): Module(
        (block): ModuleList(
          (0-2): 3 x ResnetBlock(
            (norm1): SpatialNorm(
              (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
            )
            (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): SpatialNorm(
              (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
            )
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (attn): ModuleList(
          (0-2): 3 x AttnBlock(
            (norm): SpatialNorm(
              (norm_layer): GroupNorm(32, 1024, eps=1e-06, affine=True)
              (conv_y): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
              (conv_b): Conv2d(4, 1024, kernel_size=(1, 1), stride=(1, 1))
            )
            (q): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (k): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (v): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (proj_out): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (upsample): Upsample(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (norm_out): SpatialNorm(
      (norm_layer): GroupNorm(32, 256, eps=1e-06, affine=True)
      (conv_y): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
      (conv_b): Conv2d(4, 256, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_out): Conv2d(256, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (quantize): VectorQuantizer2(
    (embedding): Embedding(16384, 4)
  )
  (quant_conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
  (post_quant_conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
)
